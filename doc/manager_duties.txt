@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

primary
======================================================================== [ACTIONS]
- emits if table item
======================================================================== [HOLDS]
- Expr
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

member
======================================================================== [ACTIONS]
- emits if table item
======================================================================== [HOLDS]
- Expr {symbol, index}
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

lvalue
======================================================================== [ACTIONS]
- finds or creates a symbol
- updates scope space manager
- needs scope space manger
======================================================================== [HOLDS]
- created symbol (as Expr)
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

methodcall
======================================================================== [ACTIONS]
-
======================================================================== [HOLDS]
- collectin of `Expr`
- is method <bool>
- <terminal::Identifier>
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

normalcall
======================================================================== [ACTIONS]
-
======================================================================== [HOLDS]
- collectin of `Expr`
- is method <bool>
- <terminal::Identifier> -> NULL
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

callsuffix
======================================================================== [ACTIONS]
-
======================================================================== [HOLDS]
- collectin of `Expr`
- is method <bool>
- <terminal::Identifier>
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

call
======================================================================== [ACTIONS]
- emits if table item
- emits `param`
- emits `call`
- emits `getretval`
======================================================================== [HOLDS]
- Expr (symbol)
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

assignexpr
======================================================================== [ACTIONS]
- emits `tablesetelem`/`assgin`
- emits if table item
======================================================================== [HOLDS]
- Expr
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

funcprefix
======================================================================== [ACTIONS]
- creates a symbol (function)
- emits `funcstart`
- updates scope space manager
======================================================================== [HOLDS]
- created symbol/fucntion
- the address (as quad number) of the created function
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

funcargs
======================================================================== [ACTIONS]
- updates scope space manager
======================================================================== [HOLDS]
-
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

funcbody
======================================================================== [ACTIONS]
- uses scope space manager
- updates scope space manager
======================================================================== [HOLDS]
- total locals <unsigned>
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

funcdef
======================================================================== [ACTIONS]
- updates scope space manager
- updates `totalLocals` of function/symbol stored in `funcprefix`
- emits `funcend`
======================================================================== [HOLDS]
- symbol/fucntion that `funcprefix` holds
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

funcblockstart
======================================================================== [ACTIONS]
- keep a copy of the loopcounter in stack
- then restore loopcounter to 0
======================================================================== [HOLDS]
-
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

funcblockend
======================================================================== [ACTIONS]
- restore loopcounter from stack
======================================================================== [HOLDS]
-
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

loopend
======================================================================== [ACTIONS]
- decrease loop counter
======================================================================== [HOLDS]
-
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
objectdef
======================================================================== [ACTIONS]
- emits `tablecreate`
- emits `tablesetelem`
======================================================================== [HOLDS]
- Expr
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

term
======================================================================== [ACTIONS]
- check arithm
- emit if table item
- emit `uminus`/`not`/`assign`/`add`/`tablesetelem`
======================================================================== [HOLDS]
- Expr {symbol}
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

expr
======================================================================== [ACTIONS]
- emits `add`/`sub`/.../`assign`/`jump`/`and`/`or`
- needs next quad address
======================================================================== [HOLDS]
- Expr
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

ifstmt_if
======================================================================== [ACTIONS]
- emits `if_eq`
- needs next quad address
- emits `jump`
======================================================================== [HOLDS]
- quad <quadAddress>
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

ifstmt_else
======================================================================== [ACTIONS]
- needs next quad address
- emits `jump`
======================================================================== [HOLDS]
- quad <quadAddress>
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

ifstmt
======================================================================== [ACTIONS]
- needs patchlabel (from `ifstmt_if` or/and `ifstmt_else`)
======================================================================== [HOLDS]
-
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

whilestmt
======================================================================== [ACTIONS]
- emits `jump`
- needs patchlabel
- needs patchlists
======================================================================== [HOLDS]
-
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

whilestmt_while
======================================================================== [ACTIONS]
- needs next quad address
======================================================================== [HOLDS]
- quad <quadAddress>
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

whilestmt_cond
======================================================================== [ACTIONS]
- emits `if_eq`, `jump`
- needs next quad address
======================================================================== [HOLDS]
- quad <quadAddress>
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

forstmt
======================================================================== [ACTIONS]
- needs next quad address
- needs patchlabel
- needs patchlists
======================================================================== [HOLDS]
-
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

forstmt_pre
======================================================================== [ACTIONS]
- needs next quad address
======================================================================== [HOLDS]
- 2 quad <quadAddress>s (named test, enter)
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

forstmt_n
======================================================================== [ACTIONS]
- needs next quad address
- emits `jump`
======================================================================== [HOLDS]
- quad <quadAddress>
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

forstmt_m
======================================================================== [ACTIONS]
- needs next quad address
======================================================================== [HOLDS]
- quad <quadAddress>
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

loopstmt
======================================================================== [ACTIONS]
-
======================================================================== [HOLDS]
- a `stm_t` (2 quadAddresses)
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

loopstart
======================================================================== [ACTIONS]
- increase loop counter
======================================================================== [HOLDS]
- 
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

loopend
======================================================================== [ACTIONS]
- decrease loop counter
======================================================================== [HOLDS]
-
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

break
======================================================================== [ACTIONS]
- needs next quad address
- needs newlist
- emits `jump`
======================================================================== [HOLDS]
- a `stm_t` (2 quadAddresses)
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

continue
======================================================================== [ACTIONS]
- needs next quad address
- needs newlist
- emits `jump`
======================================================================== [HOLDS]
- a `stm_t` (2 quadAddresses)
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

stms
======================================================================== [ACTIONS]
- needs mergelist
======================================================================== [HOLDS]
- a `stm_t` (2 quadAddresses)
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

returnstmt
======================================================================== [ACTIONS]
- emits `return`
======================================================================== [HOLDS]
-
========================================================================

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
